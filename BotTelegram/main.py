import telebot
import const
from telebot import types
import requests
from PIL import Image
from pyzbar.pyzbar import decode
bot = telebot.TeleBot(const.token)

menu = ('''{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:.^} - {}
{:-^30}
{:.^} - {}
{:-^30}
{:.^} - {}
{:.^} - {}
'''.format('–§–∏—Ä–º–µ–Ω–Ω—ã–π –ö–æ—Ñ–µ', '–î–≤–æ–π–Ω–æ–π –≥–∞–≤–∞–π—Å–∫–∏–π', '229/249 ‚ÇΩ', '–ú–∞–ª–∏–Ω–æ–≤—ã–π –ª–∞—Ç—Ç–µ', '229/249 ‚ÇΩ', '–î–∂–∏–Ω–¥–∂–µ—Ä', '229/249 ‚ÇΩ', '–õ–∞—Ç—Ç–µ —Ç–µ–∞—Ö—É–ø—É', '229/249 ‚ÇΩ', '–•–∞–π—Ñ–∞ –∫–æ—Ñ–µ', '229/249 ‚ÇΩ', '–†–∞—Ñ-–ö–æ—Ñ–µ',
'–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π', '249/279 ‚ÇΩ', '–ü—É—ç—Ä—Ç–æ-—Ä–∏–∫–∞–Ω—Å–∫–∏–π', '269/299 ‚ÇΩ',
'–°–æ–ª—ë–Ω–∞—è –∫–∞—Ä–∞–º–µ–ª—å', '249/279 ‚ÇΩ',
'–õ–∞–≤–∞–Ω–¥–æ–≤—ã–π', '269/299 ‚ÇΩ',
'–®–æ–∫–æ–ª–∞–¥',
'–ú–æ–∫–∫–æ', '219/249 ‚ÇΩ',
'–ú—è—Ç–Ω—ã–π –º–æ–∫–∫–æ', '249/279 ‚ÇΩ',
'–ö–∞–∫–∞–æ', '169/189/219 ‚ÇΩ',
'–§–∏—Ä–º–µ–Ω–Ω—ã–µ –ß–∞–∏',
'–ë–∏–∞—Ä—Ä–∏—Ç—Ü', '179/209 ‚ÇΩ',
'–ß–∏–ª–∏–Ω', '179/209 ‚ÇΩ',
'–ö–∞—Ä–µ–ª–∏—è', '179/209 ‚ÇΩ',
'–ü—Ä—è–Ω—ã–π —á–∞–π-–ª–∞—Ç—Ç–µ', '179/209 ‚ÇΩ',
'–ò–≤–∞–Ω-—á–∞–π', '69/99 ‚ÇΩ',
'Go Vegan!',
'–ö–æ –≤–∞–π –≤–µ–≥–∞–Ω', '229/269/329 ‚ÇΩ',
'–ú–∞—Ç—á–∞ –ª–∞—Ç—Ç–µ', '229/269/329 ‚ÇΩ',
'–ß—ë—Ä–Ω—ã–π –ª–∞—Ç—Ç–µ', '219/249/269 ‚ÇΩ',
'–ë–∏—Ç–±–µ—Ä—Ä–∏ –ª–∞—Ç—Ç–µ', '229/269/329 ‚ÇΩ',
'–ê–π—Å –º–∞–Ω–∫–∏ —Å–º—É–∑–∏', '199 ‚ÇΩ',
'–•–æ–ª–æ–¥–Ω—ã–π –ö–æ—Ñ–µ',
'–ê–π—Å-–ª–∞—Ç—Ç–µ', '199 ‚ÇΩ',
'–ú–∞–≤–µ—Ä–∏–∫ –±–∞–º–±–ª', '219 ‚ÇΩ',
'–°–º—É–∑–∏',
'–ü–æ—Ä—Ç—É–≥–∞–ª—å—Å–∫–∏–π', '259 ‚ÇΩ',
'–£—Ç—Ä–æ –Ω–∞ –¢–∞–∏—Ç–∏', '259 ‚ÇΩ',
'–ë–∞–ª–∏ –±—É–º', '259 ‚ÇΩ',
'–õ–∏–º–æ–Ω–∞–¥—ã',
'–ö–µ–π–ø—Ç–∞—É–Ω', '199 ‚ÇΩ',
'–ö—ç–ª–ª–∏ —Å–ª–µ–π—Ç–µ—Ä', '199 ‚ÇΩ',
'–°–∞–Ω-–ø–∞—É–ª—É', '199 ‚ÇΩ',
'–ú–∏–ª–∫—à–µ–π–∫–∏',
'–í–∞–Ω–∏–ª—å–Ω—ã–π', '259 ‚ÇΩ',
'–û—Ä–µ–æ', '259 ‚ÇΩ',
'–ö–ª–∞—Å—Å–∏–∫–∞ –ö–æ—Ñ–µ',
'–≠—Å–ø—Ä–µ—Å—Å–æ', '99 ‚ÇΩ',
'–ê–º–µ—Ä–∏–∫–∞–Ω–æ', '139/169/199 ‚ÇΩ',
'–§–∏–ª—å—Ç—Ä-–∫–æ—Ñ–µ', '139/169/199 ‚ÇΩ',
'–ö–∞–ø—É—á–∏–Ω–æ', '149/179/199 ‚ÇΩ',
'–õ–∞—Ç—Ç–µ', '149/179/199 ‚ÇΩ',
'–§–ª–µ—Ç —É–∞–π—Ç', '169 ‚ÇΩ',
'–ú–æ–ª–æ–∫–æ',
'–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω–æ–µ', '50/80/110 ‚ÇΩ',
'–î–æ–±–∞–≤–∫–∏',
'–°–∏—Ä–æ–ø SURF', '10/20/30 ‚ÇΩ',
'–ó–µ—Ñ–∏—Ä –º–∞—Ä—à–º–µ–ª–ª–æ—É / –º–∞—Å–∞–ª–∞ ', '50/80 ‚ÇΩ'))

A = ['55.822134,37.384924', '55.771663,37.682658', '55.761076,37.632374', '55.757391,37.622978',
             '55.754033,37.637354', '55.752040,37.670716', '55.745017,37.684479', '55.752604,37.597523',
             '55.742325,37.609997', '55.721476,37.611827', '55.693549,37.557648',
     '55.688152,37.615642', '55.663194,37.481396']
dic = {}
ad = ''
for i in range (len(A)-1):
    ad+=A[i]+'|'
ad+=A[len(A)-1]


def distance_calc(latlon,mode):
    global ad
    a = 'https://maps.googleapis.com/maps/api/distancematrix/json?units=imperial&origins=' + latlon + '&destinations=' + ad + '&mode=' + mode + '&language=ru&key=AIzaSyCcswgpnbZPAP4j1m91NRc2fnBfPO__APM'
    b = {}
    r = requests.get(a, params=b)
    data = r.json()
    err = (data['rows'][0]['elements'][0]['status'])
    if err != 'ZERO_RESULTS':
        distance = data['rows'][0]['elements'][0]['distance']['value']
        ind = 0
        for i in range (1,len(A)):
            if (data['rows'][0]['elements'][i]['distance']['value']) < distance:
                distance = data['rows'][0]['elements'][i]['distance']['value']
                ind = i
        if mode == 'walking':
            time = str(data['rows'][0]['elements'][ind]['duration']['text'])
        else:
            time = str(data['rows'][0]['elements'][ind]['duration_in_traffic']['text'])
        address = data['destination_addresses'][ind]
        return(distance, time, address, ind)
    else:
        return ('','','','')
# –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
@bot.message_handler(commands=['start'])
def handler_start(message):
    user_keyboard = telebot.types.ReplyKeyboardMarkup()
    user_keyboard.row('–ú–æ—è –∫–∞—Ä—Ç–∞', '–ù–æ–≤–æ—Å—Ç–∏')
    user_keyboard.row('–ö–æ—Ñ–µ–π–Ω–∏', '–ú–µ–Ω—é')
    bot.send_message(message.from_user.id, "–ê–ª–æ—Ö–∞, –±—Ä–æüòé", reply_markup=user_keyboard)
# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –∫–Ω–æ–ø–∫–∏ (–ú–æ—è –∫–∞—Ä—Ç–∞)
@bot.message_handler(content_types=['text'])
def press_mycard(message):
    if message.text == '–ú–µ–Ω—é':
        user_keyboard_back = telebot.types.ReplyKeyboardMarkup()
        user_keyboard_back.row('–ú–æ—è –∫–∞—Ä—Ç–∞', '–ù–æ–≤–æ—Å—Ç–∏')
        user_keyboard_back.row('–ö–æ—Ñ–µ–π–Ω–∏', '–ú–µ–Ω—é')
        bot.send_message(message.from_user.id, '%s' %menu, reply_markup=user_keyboard_back)
# –ú–æ—è –∫–∞—Ä—Ç–∞
    fileName = str(str(message.chat.id) + '.jpg')
    if message.text == '–ú–æ—è –∫–∞—Ä—Ç–∞':
        mycard_keyboard = telebot.types.ReplyKeyboardMarkup()
        mycard_keyboard.row('–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å', '–ù–∞–∑–∞–¥')
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ", reply_markup=mycard_keyboard)
    if message.text == '–£–∑–Ω–∞—Ç—å –±–∞–ª–∞–Ω—Å':
        bot.send_message(message.from_user.id, "–û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–∫—É QR –∫–æ–¥–∞ —Å –æ–±—Ä–∞—Ç–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã –∫–∞—Ä—Ç—ã")
        @bot.message_handler(content_types=['photo'])
        def handle_docs_photo(message):
            file_info = bot.get_file(message.photo[len(message.photo) - 1].file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            src = '/Users/Ivan/Desktop/GitHub/miemsurfcoffee/telegramBot/' + fileName
            with open(src, 'wb') as new_file:
                new_file.write(downloaded_file)
            bot.reply_to(message, "QRcode –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è")
            qr_code = decode(Image.open(fileName))
            cardNum = str(qr_code).split()[0][16:-2]
            bot.send_message(message.from_user.id, cardNum)
    if message.text == '–ù–∞–∑–∞–¥':
        user_keyboard_back = telebot.types.ReplyKeyboardMarkup()
        user_keyboard_back.row('–ú–æ—è –∫–∞—Ä—Ç–∞', '–ù–æ–≤–æ—Å—Ç–∏')
        user_keyboard_back.row('–ö–æ—Ñ–µ–π–Ω–∏', '–ú–µ–Ω—é')
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ", reply_markup=user_keyboard_back)
    if message.text == '–ö–æ—Ñ–µ–π–Ω–∏':
        user_keyboard = telebot.types.ReplyKeyboardMarkup()
        user_keyboard.row('–ë–ª–∏–∂–∞–π—à–∞—è –∫–æ—Ñ–µ–π–Ω—è', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–¥—Ä–µ—Å–∞')
        bot.send_message(message.from_user.id, "–í—ã–±–µ—Ä–∏—Ç–µ", reply_markup=user_keyboard)
    if message.text == '–ë–ª–∏–∂–∞–π—à–∞—è –∫–æ—Ñ–µ–π–Ω—è':
        keyboard = types.ReplyKeyboardMarkup(True)
        button_geo = types.KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é', request_location=True)
        keyboard.add(button_geo)
        bot.send_message(message.from_user.id, '–û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å–≤–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ!', reply_markup=keyboard)
    elif message.text == '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–¥—Ä–µ—Å–∞':
        bot.send_message(message.from_user.id, '–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ: https://www.google.com/maps/d/u/0/edit?mid=1uy5NOjQzmv_o0YjL0s17279nTRe35_42&ll=55.773651838993%2C37.51691856768127&z=11')

    else:
        if message.text == '–ù–∞ –º–∞—à–∏–Ω–µ':
            hide_markup = types.ReplyKeyboardMarkup(True)
            hide_markup.row('–ë–ª–∏–∂–∞–π—à–∞—è –∫–æ—Ñ–µ–π–Ω—è', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–¥—Ä–µ—Å–∞')
            bot.send_message(message.from_user.id, '–ü–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–µ–π –∫–æ—Ñ–µ–π–Ω–∏ —Å —É—á—ë—Ç–æ–º –ø—Ä–æ–±–æ–∫...', reply_markup = hide_markup)
            dic[str(message.from_user.id)] = 'driving&departure_time=now'
            if dic.get(message.from_user.id)==None:
                keyboard = types.ReplyKeyboardMarkup(True)
                button_geo = types.KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ', request_location=True)
                keyboard.add(button_geo)
                bot.send_message(message.from_user.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
                bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã', reply_markup=keyboard)

        elif message.text == '–ü–µ—à–∫–æ–º':
            hide_markup = types.ReplyKeyboardMarkup(True)
            hide_markup.row('–ë–ª–∏–∂–∞–π—à–∞—è –∫–æ—Ñ–µ–π–Ω—è', '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ –∞–¥—Ä–µ—Å–∞')
            dic[str(message.from_user.id)] = 'walking'
            bot.send_message(message.from_user.id, '–ü–æ–∏—Å–∫ –±–ª–∏–∂–∞–π—à–µ–π –∫–æ—Ñ–µ–π–Ω–∏...', reply_markup = hide_markup)
            if dic.get(message.from_user.id)==None:
                keyboard = types.ReplyKeyboardMarkup(True)
                button_geo = types.KeyboardButton(text='–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ', request_location=True)
                keyboard.add(button_geo)
                bot.send_message(message.from_user.id, '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞')
                bot.send_message(message.from_user.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã', reply_markup=keyboard)

        if dic.get(message.from_user.id)!=None:
            distance, time, address, ind = distance_calc(dic[message.from_user.id], dic[str(message.from_user.id)])
            if distance != '':

                st = A[ind].split(',')
                bot.send_location(message.from_user.id, float(st[0]),float(st[1]))
                bot.send_message(message.from_user.id,'–ê–¥—Ä–µ—Å –±–ª–∏–∂–∞–π—à–µ–≥–æ SurfCoffee: %s.' %address)
                bot.send_message(message.from_user.id, '–í–∞—à–µ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–µ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ SurfCoffee: %s –º.' %distance)
                bot.send_message(message.from_user.id, '–í—Ä–µ–º—è –≤ –ø—É—Ç–∏ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ SurfCoffee: %s' %time )
                del dic[message.from_user.id]
                del dic[str(message.from_user.id)]
            else:
                bot.send_message(message.from_user.id, '–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–ª–æ–∂–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç!')
                del dic[message.from_user.id]
                del dic[str(message.from_user.id)]

@bot.message_handler(content_types=["location"])
def location(message):
    if message.location is not None:
        hide_markup = types.ReplyKeyboardMarkup(True)
        hide_markup.row('–ù–∞ –º–∞—à–∏–Ω–µ', '–ü–µ—à–∫–æ–º')
        bot.send_message(message.from_user.id, '–°–ø–∞—Å–∏–±–æ!', reply_markup=hide_markup)
        bot.send_message(message.from_user.id, '–ö–∞–∫ —Ç—ã –±—É–¥–µ—à—å –¥–æ–±–∏—Ä–∞—Ç—å—Å—è –¥–æ SurfCoffee?')
        dic[message.from_user.id] = str(message.location.latitude) + ',' + str(message.location.longitude)

bot.polling(none_stop=True)